def diffactor(G):
    while True:
     a = leidenalg.find_partition(G.complementer(), leidenalg.ModularityVertexPartition, n_iterations=-1, max_comm_size=3, seed = random.randint(0, 2048))
     ka = Counter(a.membership).most_common()[-1][1]
     if ka == 3:
       break
    
    e = set()
    for c in G.largest_cliques():
      e = e | set(c)
    
    lst = [[] for j in set(a.membership)]
    for i, m in enumerate(a.membership):
      lst[m].append(i)
    
    for l in lst:
      fnd = False
      for x in l:
        if x in e:
          fnd = True
          break
      if not fnd:
        print("Shit", ka)
    
    return ka
