def diffactor(G):
    G = G.linegraph()
    gol = list()
    for e in G.es:
      x = e.source
      y = e.target

      teamX = set(G.neighbors(x)) - set(G.neighbors(y))
      teamY = set(G.neighbors(y)) - set(G.neighbors(x))
      teamM = set(G.neighbors(x)) & set(G.neighbors(y))
      teamX.add(x)
      teamY.add(y)
      if x in teamY:
       teamY.remove(x)
    
      if y in teamX:
       teamX.remove(y)
    
      if y in teamM:
       teamM.remove(y)
    
      if x in teamM:
       teamM.remove(x)
      
      prev = len(teamX) + len(teamY) + len(teamM)
      total = prev

      while prev < G.vcount():
       q += 1
       tx = teamX.copy()
       ty = teamY.copy()
       for peace in teamM.copy():
        n = set(G.neighbors(peace))
        a = len(n & tx)
        b = len(n & ty)
        if  a > b:
          teamX.add(peace)
          teamM.remove(peace)
        elif a < b:
          teamY.add(peace)
          teamM.remove(peace)
      
       tx = teamX.copy()
       ty = teamY.copy()
       for free in set(G.vs.indices) - (tx | ty | teamM):
        n = set(G.neighbors(free))
        a = len(n & tx)
        b = len(n & ty)
        if a > b:
          teamX.add(free)
        elif a < b:
          teamY.add(free)
       
       total = len(teamX) + len(teamY) + len(teamM)
       if total == prev:
        break
       else:
        prev = total

      gol.append(tuple({ frozenset({len(teamX), len(teamY)}), len(teamM), total}))
    
    return gol
