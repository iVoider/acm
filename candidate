def diffactor(G):
    
    H = ig.Graph()

    connected = set()
    for e in G.es:
      connected.add(frozenset({G.vs[e.source]["_nx_name"], G.vs[e.target]["_nx_name"]}))
    
    roy = []
    moy = {}

    for v in G.vs.indices:
      moy[G.vs[v]["_nx_name"]] = list()

    for i, v in enumerate(G.vs.indices):
      Z = G.copy()
      Z.delete_vertices(Z.neighbors(v) + [v])
      Z.vs.select(_degree=0).delete()

      names = {}
      for v in Z.vs.indices:
        H.add_vertex(1)
        names[v] = H.vcount() - 1
        roy.append(i)
        moy[Z.vs[v]["_nx_name"]].append(H.vcount() - 1)
     
    for x, y in connected:
        H.add_edges(itertools.product(moy[x], moy[y]))
    
    return H.complementer().modularity(roy)
