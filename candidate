def diffactor(G, weights = None):
    
    r = list()

    for e in G.es:
        H = G.copy()
        map_ping = G.vs.indices
        for n in G.vs[e.source].neighbors():
           map_ping[n.index] = e.target

        for n in G.vs[e.target].neighbors():
           map_ping[n.index] = e.source

        H.contract_vertices(map_ping)

        map_ping = [0] * (H.vcount())
        map_ping[e.target] = 1
        map_ping[e.source] = 2
        if weights == None:
         r.append(ig.VertexClustering(H, map_ping).modularity)
        else:
         r.append(ig.VertexClustering(H, map_ping, modularity_params = { 'weight' : weights}).modularity)
    
    return r
