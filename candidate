def chkp(G):
  H = G.complementer()
  
  tact = dict.fromkeys(G.es.indices, 0)

  for x,y in itertools.combinations(H.vs.indices, 2):
    cu = 0
    for p in H.get_all_shortest_paths(x,to=y):
     vals = dict([(i,{i}) for i in H.vs.indices])
     path = set(p)

     for z in p:
      for n in G.neighbors(z):
        vals[z] |= vals[n]
      if z in path and (x in vals[z] and y in vals[z]):
        path.remove(z)

     for z in reversed(p):
      for n in G.neighbors(z):
        vals[z] |= vals[n]
      if z in path and (x in vals[z] and y in vals[z]):
        path.remove(z)
      
     if (len(path) == 0):
      cu += 1
    to = G.get_eid(x,y, error = False)
    if to != -1:
     tact[to] = cu

  return frozenset(Counter(tact.values()).most_common())

